# Configuration file
quarkus.http.port=8098
quarkus.http.host=0.0.0.0
quarkus.dev-ui.cors.enabled=false
#quarkus.http.cors=true
#quarkus.http.cors.origins=/.*/
#
#kogito.service.url=http://localhost:${quarkus.http.port}
#
#quarkus.kafka.devservices.provider=strimzi
#quarkus.kafka.devservices.topic-partitions.barista-process=1
#quarkus.kafka.devservices.topic-partitions.messages=2
#
#quarkus.kafka.devservices.port:46819
quarkus.kafka.devservices.topic-partitions-timeout:10
kafka.bootstrap.servers=localhost:9092
quarkus.kafka.health.enabled=true
#quarkus.kafka.devservices.enabled=false
quarkus.log.category."org.apache.kafka.clients".level=DEBUG
#quarkus.log.category."org.apache.kafka.common.utils".level=DEBUG
#quarkus.log.category."org.apache.kafka.common.metrics".level=DEBUG

#quarkus.infinispan-client.devservices.enabled=false
#quarkus.keycloak.devservices.enabled=false
##quarkus.kogito.devservices.enabled=false
#quarkus.kogito.data-index.graphql.ui.always-include=true

#quarkus.datasource.devservices.enabled=false


# infinispan connection config
#quarkus.infinispan-client.server-list=localhost:11222
#quarkus.infinispan-client.auth-server-name=infinispan
#quarkus.infinispan-client.auth-username=infinispan
#quarkus.infinispan-client.auth-password=infinispan
#quarkus.infinispan-client.auth-realm=default
#quarkus.infinispan-client.client-intelligence=BASIC

# swagger enablement config (for testing in PRD profile as well)
quarkus.swagger-ui.always-include=true
# barista-process kakfa topic connection details
#mp.messaging.outgoing.barista-process.health-enabled=true
#
mp.messaging.outgoing.barista-process.bootstrap.servers=localhost:9092
mp.messaging.outgoing.barista-process.connector=smallrye-kafka
mp.messaging.outgoing.barista-process.topic=barista-process
mp.messaging.outgoing.barista-process.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# kogito-usertaskinstances-events kakfa topic connection details
mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# kogito-processinstances-events kakfa topic connection details
mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=localhost:9092
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# oidc server (keycloak) connection config
#quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/kogito
#quarkus.oidc.client-id=kogito-app
#quarkus.oidc.credentials.secret=secret
# # security config for this app
# quarkus.http.auth.permission.authenticated.paths=/*
# quarkus.http.auth.permission.authenticated.policy=authenticated
# rest client config to call payments gateway
org.bala.drink.coffee.service.PaymentsGateway/mp-rest/url=https://postman-echo.com
org.bala.drink.coffee.service.PaymentsGateway/mp-rest/scope=javax.inject.Singleton
#
# Kogito runtime persistence configurations
#kogito.persistence.type=jdbc
#kogito.persistence.proto.marshaller=false
#kogito.persistence.query.timeout.millis=10000
#quarkus.datasource.db-kind=postgresql
#quarkus.flyway.migrate-at-start=true
